---
import Section from "../components/common/Section.astro";
import Layout from "../layouts/Layout.astro";
import { GLOBAL } from "../lib/variables";

declare global {
  interface Window {
    /** Incomplete types from: https://github.com/apvarun/toastify-js/tree/master?tab=readme-ov-file#api */
    Toastify(options: {
      text: string;
      className?: string;
      style?: {
        background?: string;
      };
      offset?: {
        x?: number;
        y?: number;
      };
      gravity?: "top" | "bottom";
      position?: "left" | "right";
    }): { showToast(): void };
  }
}
---

<Layout>
  <Fragment slot="head">
    <title>{GLOBAL.contactTitle} • {GLOBAL.username}</title>
    <meta name="description" content={GLOBAL.contactDescription} />
    <meta
      property="og:title"
      content={`${GLOBAL.projectTitle} • ${GLOBAL.username}`}
    />
    <meta property="og:description" content={GLOBAL.contactDescription} />
    <meta
      property="og:image"
      content={`${GLOBAL.rootUrl}/${GLOBAL.profileImage}`}
    />
    <meta property="og:url" content={`${GLOBAL.rootUrl}/projects`} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:title"
      content={`${GLOBAL.projectTitle} • ${GLOBAL.username}`}
    />
    <meta name="twitter:description" content={GLOBAL.contactDescription} />
    <meta
      name="twitter:image"
      content={`${GLOBAL.rootUrl}/${GLOBAL.profileImage}`}
    />
    <meta http-equiv="content-language" content="en" />
    <meta name="language" content="English" />
    <link rel="canonical" href={`${GLOBAL.rootUrl}/contact`} />
  </Fragment>
  <Section class="py-4 my-8">
    <h1 class="text-3xl font-bold mb-8">Contact Us</h1>

    <form id="contact-form" class="flex flex-col gap-8">
      <label class="opacity-0 overflow-hidden h-1">
        <span>Name</span>
        <input id="name" />
      </label>

      <div class="flex flex-col gap-2">
        <label class="w-full flex gap-3 items-center">
          <span>Your Email: </span>
          <input
            id="email"
            type="email"
            class="border-solid border-1 zag-border-color rounded-sm p-1 flex-grow"
          />
        </label>
        <div class="text-sm text-right">
          Specify an email if you want us to be able to get back to you.
        </div>
      </div>

      <label class="flex flex-col gap-2">
        <span>Message *</span>
        <textarea
          id="message"
          required="true"
          placeholder="Your message..."
          class="border-solid border-1 zag-border-color rounded-sm p-1 flex-grow h-[10em]"
        ></textarea>
      </label>

      <button
        class="border-solid border-2 zag-border-color rounded-md p-1 cursor-pointer"
        >Send</button
      >
    </form>
  </Section>

  <script is:inline>
    async function sendContact(e) {
      console.trace("contact");
      e.preventDefault();
      const nameElement = document.getElementById("name");
      // This is actually our honeypot bot avoider
      if (nameElement.value) return;

      const emailElement = document.getElementById("email");
      const messageElement = document.getElementById("message");
      const message = {
        text: "Someone contacted you on unofficialgreenember.ktech.studio",
        attachments: [
          {
            title: `Email <${emailElement.value || "[not specified]"}>`,
            text: messageElement.value,
          },
        ],
      };
      try {
        await fetch(
          `https://chat.katharostech.com/hooks/682b48a141ba87c52cf67f4d/LNaPChabhXBK9GjDp9HPyfma6MEpNChZL4TBnhzry4a4kCqz`,
          {
            method: "post",
            headers: [["Content-Type", "application/json"]],
            body: JSON.stringify(message),
          }
        );
        emailElement.value = "";
        messageElement.value = "";
        window
          .Toastify({
            text: "Your message was sent",
            style: {
              background: "green",
            },
          })
          .showToast();
      } catch (e) {
        window
          .Toastify({
            text: "Error sending message. If problem persists email zicklag (at) katharostech.com",
            style: {
              background: "red",
            },
          })
          .showToast();
      }
    }

    document
      .getElementById("contact-form")
      .addEventListener("submit", sendContact);
  </script>
</Layout>
